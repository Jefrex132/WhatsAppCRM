{"remainingRequest":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js??ref--13-0!/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/babel-loader/lib/index.js!/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeffseq/Documents/DashBoard Vue/vue-main/src/views/app/apps/editInvoice.vue?vue&type=template&id=22da44b7&","dependencies":[{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/src/views/app/apps/editInvoice.vue","mtime":1641437118000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/babel.config.js","mtime":1600728574000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CnZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7CiAgdmFyIF92bSA9IHRoaXMsCiAgICBfYyA9IF92bS5fc2VsZi5fYzsKICByZXR1cm4gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibWFpbi1jb250ZW50IgogIH0sIFtfYygnYi1yb3cnLCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgIm1kIjogIjEyIgogICAgfQogIH0sIFtfYygnYi1jYXJkJywgW19jKCdiLWZvcm0nLCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IG1iLTUiLAogICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICBrZXk6ICJ0YWJsZS1yb3ciLAogICAgICBmbjogZnVuY3Rpb24gZm4ocHJvcHMpIHsKICAgICAgICByZXR1cm4gW3Byb3BzLmNvbHVtbi5maWVsZCA9PSAnYnV0dG9uJyA/IF9jKCdzcGFuJywgW19jKCdhJywgewogICAgICAgICAgb246IHsKICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuIF92bS5lZGl0SW52b2ljZURhdGEocHJvcHMucm93KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIFtfYygnaScsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaS1FcmFzZXItMiB0ZXh0LTI1IHRleHQtc3VjY2VzcyBtci0yIgogICAgICAgIH0pLCBfdm0uX3YoIiAiICsgX3ZtLl9zKHByb3BzLnJvdy5idXR0b24pKV0pLCBfYygnYScsIHsKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgIHJldHVybiBfdm0ucmVtb3ZlSW52b2ljZShwcm9wcy5yb3cuaW52b2ljZUlkKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIFtfYygnaScsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaS1DbG9zZS1XaW5kb3cgdGV4dC0yNSB0ZXh0LWRhbmdlciIKICAgICAgICB9KSwgX3ZtLl92KCIgIiArIF92bS5fcyhwcm9wcy5yb3cuYnV0dG9uKSldKV0pIDogX3ZtLl9lKCldOwogICAgICB9CiAgICB9XSkKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogIm0tYXV0byIKICB9KSwgX2MoJ2ItYnV0dG9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhcmlhbnQiOiAib3V0bGluZS1zZWNvbmRhcnkgbXItMyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBfdm0uYmFja0ludm9pY2UKICAgIH0KICB9LCBbX3ZtLl92KCIgQ2FuY2VsICIpXSksIF9jKCdiLWJ1dHRvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YXJpYW50IjogInByaW1hcnkiCiAgICB9LAogICAgb246IHsKICAgICAgImNsaWNrIjogX3ZtLnVwZGF0ZUludm9pY2VEYXRhCiAgICB9CiAgfSwgW192bS5fdigiIFVwZGF0ZSAiKV0pXSwgMSksIF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAianVzdGlmeS1jb250ZW50LWJldHdlZW4iCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJsZyI6ICI4IiwKICAgICAgIm1kIjogIjYiCiAgICB9CiAgfSwgW19jKCdoNCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZm9udC13ZWlnaHQtYm9sZCIKICB9LCBbX3ZtLl92KCJPcmRlciBJbmZvIildKSwgX2MoJ2ItZm9ybS1ncm91cCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29sLXNtLTQgbWItMyBwbC0wIiwKICAgIGF0dHJzOiB7CiAgICAgICJsYWJlbCI6ICJPcmRlciBOdW1iZXIiCiAgICB9CiAgfSwgW19jKCdiLWZvcm0taW5wdXQnLCB7CiAgICBhdHRyczogewogICAgICAicGxhY2Vob2xkZXIiOiAiRW50ZXIgT3JkZXIgTnVtYmVyIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZ2V0RWRpdEludm9pY2UuaW52b2ljZUlkLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmdldEVkaXRJbnZvaWNlLCAiaW52b2ljZUlkIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImdldEVkaXRJbnZvaWNlLmludm9pY2VJZCIKICAgIH0KICB9KV0sIDEpLCBfYygnaDInLCBbX3ZtLl92KF92bS5fcyhfdm0uaXRlbXMubmFtZSkpXSldLCAxKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LXJpZ2h0IiwKICAgIGF0dHJzOiB7CiAgICAgICJtZCI6ICI2IiwKICAgICAgImxnIjogIjQiCiAgICB9CiAgfSwgW19jKCdsYWJlbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1ibG9jayB0ZXh0LTEyIHRleHQtbXV0ZWQiCiAgfSwgW192bS5fdigiT3JkZXIgU3RhdHVzIildKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY29sLW1kLTYgb2Zmc2V0LW1kLTYgcHItMCBtYi0zMCIKICB9LCBbX2MoJ2xhYmVsJywgewogICAgc3RhdGljQ2xhc3M6ICJyYWRpbyByYWRpby1yZXZlcnNlIHJhZGlvLWRhbmdlciIKICB9LCBbX2MoJ2lucHV0JywgewogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAicmFkaW8iLAogICAgICAibmFtZSI6ICJvcmRlclN0YXR1cyIsCiAgICAgICJ2YWx1ZSI6ICJQZW5kaW5nIgogICAgfQogIH0pLCBfYygnc3BhbicsIFtfdm0uX3YoIlBlbmRpbmciKV0pLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAiY2hlY2ttYXJrIgogIH0pXSksIF9jKCdsYWJlbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicmFkaW8gcmFkaW8tcmV2ZXJzZSByYWRpby13YXJuaW5nIgogIH0sIFtfYygnaW5wdXQnLCB7CiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJyYWRpbyIsCiAgICAgICJuYW1lIjogIm9yZGVyU3RhdHVzIiwKICAgICAgInZhbHVlIjogIlByb2Nlc3NpbmciCiAgICB9CiAgfSksIF9jKCdzcGFuJywgW192bS5fdigiUHJvY2Vzc2luZyIpXSksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJjaGVja21hcmsiCiAgfSldKSwgX2MoJ2xhYmVsJywgewogICAgc3RhdGljQ2xhc3M6ICJyYWRpbyByYWRpby1yZXZlcnNlIHJhZGlvLXN1Y2Nlc3MiCiAgfSwgW19jKCdpbnB1dCcsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgdmFsdWU6IF92bS5uZXdJbnZvaWNlLnN0YXR1cywKICAgICAgZXhwcmVzc2lvbjogIm5ld0ludm9pY2Uuc3RhdHVzIgogICAgfV0sCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJyYWRpbyIsCiAgICAgICJuYW1lIjogIm9yZGVyU3RhdHVzIiwKICAgICAgInZhbHVlIjogIkRlbGl2ZXJlZCIKICAgIH0sCiAgICBkb21Qcm9wczogewogICAgICAiY2hlY2tlZCI6IF92bS5fcShfdm0ubmV3SW52b2ljZS5zdGF0dXMsICJEZWxpdmVyZWQiKQogICAgfSwKICAgIG9uOiB7CiAgICAgICJjaGFuZ2UiOiBmdW5jdGlvbiBjaGFuZ2UoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS4kc2V0KF92bS5uZXdJbnZvaWNlLCAic3RhdHVzIiwgIkRlbGl2ZXJlZCIpOwogICAgICB9CiAgICB9CiAgfSksIF9jKCdzcGFuJywgW192bS5fdigiRGVsaXZlcmVkIildKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImNoZWNrbWFyayIKICB9KV0pXSksIF9jKCdiLWZvcm0tZ3JvdXAnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTMiLAogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogIk9yZGVyIERhdGUiCiAgICB9CiAgfSwgW19jKCdiLWZvcm0taW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogImlucHV0IiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogImRhdGUiCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5uZXdJbnZvaWNlLmRhdGUsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0ubmV3SW52b2ljZSwgImRhdGUiLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAibmV3SW52b2ljZS5kYXRlIgogICAgfQogIH0pXSwgMSldLCAxKV0sIDEpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0zIG1iLTMwIGJvcmRlci10b3AiCiAgfSksIF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItNSIKICB9LCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgIm1kIjogIjYiCiAgICB9CiAgfSwgW19jKCdoNScsIHsKICAgIHN0YXRpY0NsYXNzOiAiZm9udC13ZWlnaHQtYm9sZCIKICB9LCBbX3ZtLl92KCJCaWxsIEZyb20iKV0pLCBfYygnYi1mb3JtLWdyb3VwJywgewogICAgc3RhdGljQ2xhc3M6ICJjb2wtbWQtMTAgbWItMyBwbC0wIgogIH0sIFtfYygnYi1mb3JtLWlucHV0JywgewogICAgYXR0cnM6IHsKICAgICAgInBsYWNlaG9sZGVyIjogIkJpbGwgRnJvbSIsCiAgICAgICJ0eXBlIjogInRleHQiLAogICAgICAicmVxdWlyZWQiOiAiIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZ2V0RWRpdEludm9pY2UuYmlsbEZyb20sCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZ2V0RWRpdEludm9pY2UsICJiaWxsRnJvbSIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJnZXRFZGl0SW52b2ljZS5iaWxsRnJvbSIKICAgIH0KICB9KV0sIDEpLCBfYygnYi1mb3JtLWdyb3VwJywgewogICAgc3RhdGljQ2xhc3M6ICJjb2wtbWQtMTAgbWItMyBwbC0wIgogIH0sIFtfYygnYi1mb3JtLXRleHRhcmVhJywgewogICAgYXR0cnM6IHsKICAgICAgInBsYWNlaG9sZGVyIjogIkJpbGwgRm9ybSBBZGRyZXNzIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZ2V0RWRpdEludm9pY2UuYmlsbEZyb21BZHJlc3MsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZ2V0RWRpdEludm9pY2UsICJiaWxsRnJvbUFkcmVzcyIsICQkdik7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJnZXRFZGl0SW52b2ljZS5iaWxsRnJvbUFkcmVzcyIKICAgIH0KICB9KV0sIDEpXSwgMSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1yaWdodCIsCiAgICBhdHRyczogewogICAgICAibWQiOiAiNiIKICAgIH0KICB9LCBbX2MoJ2g1JywgewogICAgc3RhdGljQ2xhc3M6ICJmb250LXdlaWdodC1ib2xkIgogIH0sIFtfdm0uX3YoIkJpbGwgVG8iKV0pLCBfYygnYi1mb3JtLWdyb3VwJywgewogICAgc3RhdGljQ2xhc3M6ICJjb2wtbWQtMTAgb2Zmc2V0LW1kLTIgbWItMyBwci0wIgogIH0sIFtfYygnYi1mb3JtLWlucHV0JywgewogICAgYXR0cnM6IHsKICAgICAgInBsYWNlaG9sZGVyIjogIkJpbGwgdG8iCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5nZXRFZGl0SW52b2ljZS5iaWxsVG8sCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uJHNldChfdm0uZ2V0RWRpdEludm9pY2UsICJiaWxsVG8iLCAkJHYpOwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZ2V0RWRpdEludm9pY2UuYmlsbFRvIgogICAgfQogIH0pXSwgMSksIF9jKCdiLWZvcm0tZ3JvdXAnLCB7CiAgICBzdGF0aWNDbGFzczogImNvbC1tZC0xMCBvZmZzZXQtbWQtMiBtYi0zIHByLTAiCiAgfSwgW19jKCdiLWZvcm0tdGV4dGFyZWEnLCB7CiAgICBhdHRyczogewogICAgICAicGxhY2Vob2xkZXIiOiAiQmlsbCBUbyBBZGRyZXNzIgogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uZ2V0RWRpdEludm9pY2UuYmlsbFRvQWRyZXNzLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLiRzZXQoX3ZtLmdldEVkaXRJbnZvaWNlLCAiYmlsbFRvQWRyZXNzIiwgJCR2KTsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImdldEVkaXRJbnZvaWNlLmJpbGxUb0FkcmVzcyIKICAgIH0KICB9KV0sIDEpXSwgMSldLCAxKSwgX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAidGFibGUtcmVzcG9uc2l2ZSIsCiAgICBhdHRyczogewogICAgICAibWQiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdiLXRhYmxlJywgewogICAgYXR0cnM6IHsKICAgICAgImhvdmVyIjogIiIsCiAgICAgICJpdGVtcyI6IF92bS5pdGVtcywKICAgICAgImZpZWxkcyI6IF92bS5maWVsZHMKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImluZGV4IiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKGRhdGEpIHsKICAgICAgICByZXR1cm4gW19jKCdwJywgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb250LXdlaWdodC1ib2xkIgogICAgICAgIH0sIFtfdm0uX3YoX3ZtLl9zKGRhdGEuaW5kZXggKyAxKSldKV07CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAidW5pdFByaWNlIiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKGRhdGEpIHsKICAgICAgICByZXR1cm4gW19jKCdpbnB1dCcsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgdmFsdWU6IGRhdGEuaXRlbS51bml0UHJpY2UsCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJkYXRhLml0ZW0udW5pdFByaWNlIgogICAgICAgICAgfV0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAidHlwZSI6ICJudW1iZXIiLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiAiVW5pdCBQcmljZSIKICAgICAgICAgIH0sCiAgICAgICAgICBkb21Qcm9wczogewogICAgICAgICAgICAidmFsdWUiOiBkYXRhLml0ZW0udW5pdFByaWNlCiAgICAgICAgICB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSgkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhbGN1bGF0ZUxpbmVUb3RhbChkYXRhLml0ZW0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiaW5wdXQiOiBmdW5jdGlvbiBpbnB1dCgkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVybjsKICAgICAgICAgICAgICBfdm0uJHNldChkYXRhLml0ZW0sICJ1bml0UHJpY2UiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pXTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJ1bml0IiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKGRhdGEpIHsKICAgICAgICByZXR1cm4gW19jKCdpbnB1dCcsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgdmFsdWU6IGRhdGEuaXRlbS51bml0LAogICAgICAgICAgICBleHByZXNzaW9uOiAiZGF0YS5pdGVtLnVuaXQiCiAgICAgICAgICB9XSwKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsCiAgICAgICAgICAgICJwbGFjZWhvbGRlciI6ICJVbml0IgogICAgICAgICAgfSwKICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICJ2YWx1ZSI6IGRhdGEuaXRlbS51bml0CiAgICAgICAgICB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSgkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhbGN1bGF0ZUxpbmVUb3RhbChkYXRhLml0ZW0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiaW5wdXQiOiBmdW5jdGlvbiBpbnB1dCgkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVybjsKICAgICAgICAgICAgICBfdm0uJHNldChkYXRhLml0ZW0sICJ1bml0IiwgJGV2ZW50LnRhcmdldC52YWx1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KV07CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAiY29zdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihkYXRhKSB7CiAgICAgICAgcmV0dXJuIFtfYygnaW5wdXQnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgIHZhbHVlOiBkYXRhLml0ZW0uY29zdCwKICAgICAgICAgICAgZXhwcmVzc2lvbjogImRhdGEuaXRlbS5jb3N0IgogICAgICAgICAgfV0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAicmVhZG9ubHkiOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICJ2YWx1ZSI6IGRhdGEuaXRlbS5jb3N0CiAgICAgICAgICB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgImlucHV0IjogZnVuY3Rpb24gaW5wdXQoJGV2ZW50KSB7CiAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm47CiAgICAgICAgICAgICAgX3ZtLiRzZXQoZGF0YS5pdGVtLCAiY29zdCIsICRldmVudC50YXJnZXQudmFsdWUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogImFjdGlvbiIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihkYXRhKSB7CiAgICAgICAgcmV0dXJuIFtfYygnYi1idXR0b24nLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAidmFyaWFudCI6ICJvdXRsaW5lLWRhbmdlciIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRlbGV0ZVJvdyhkYXRhLmluZGV4LCBkYXRhLml0ZW0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgW192bS5fdigiRGVsZXRlIildKV07CiAgICAgIH0KICAgIH1dKQogIH0sIFtfYygndGVtcGxhdGUnLCB7CiAgICBzbG90OiAiaXRlbU5hbWUiCiAgfSwgW19jKCdpbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogInRleHQiLAogICAgICAicGxhY2Vob2xkZXIiOiAiSXRlbSBOYW1lIgogICAgfQogIH0pXSldLCAyKSwgX2MoJ2ItYnV0dG9uJywgewogICAgc3RhdGljQ2xhc3M6ICJmbG9hdC1yaWdodCBtYi0zMCIsCiAgICBhdHRyczogewogICAgICAidmFyaWFudCI6ICJwcmltYXJ5IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IF92bS5hZGROZXdSb3cKICAgIH0KICB9LCBbX3ZtLl92KCIgQWRkIEl0ZW0gIildKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAibWQiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImludm9pY2Utc3VtbWFyeSBpbnZvaWNlLXN1bW1hcnktaW5wdXQgZmxvYXQtcmlnaHQiCiAgfSwgW19jKCdwJywgW192bS5fdigiIFN1YiB0b3RhbDogIiksIF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLnN1YlRvdGFsKSldKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIKICB9LCBbX3ZtLl92KCIgVmF0KCUpOiAiKSwgX2MoJ3NwYW4nLCBbX2MoJ2lucHV0JywgewogICAgZGlyZWN0aXZlczogW3sKICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICB2YWx1ZTogX3ZtLmludm9pY2VfdGF4LAogICAgICBleHByZXNzaW9uOiAiaW52b2ljZV90YXgiCiAgICB9XSwKICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIHNtYWxsLWlucHV0IiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogInRleHQiCiAgICB9LAogICAgZG9tUHJvcHM6IHsKICAgICAgInZhbHVlIjogX3ZtLmludm9pY2VfdGF4CiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmludm9pY2VUb3RhbChfdm0uaW52b2ljZV90YXgpOwogICAgICB9LAogICAgICAiaW5wdXQiOiBmdW5jdGlvbiBpbnB1dCgkZXZlbnQpIHsKICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVybjsKICAgICAgICBfdm0uaW52b2ljZV90YXggPSAkZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICB9CiAgICB9CiAgfSldKV0pLCBfYygnaDUnLCB7CiAgICBzdGF0aWNDbGFzczogImZvbnQtd2VpZ2h0LWJvbGQgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIKICB9LCBbX3ZtLl92KCIgR3JhbmQgVG90YWw6ICIpLCBfYygnc3BhbicsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5pbnZvaWNlX3RvdGFsKSArICIgIildKV0pXSldKV0sIDEpXSwgMSldLCAxKV0sIDEpXSwgMSldLCAxKTsKfTsKdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdOwpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Ow=="},null]}