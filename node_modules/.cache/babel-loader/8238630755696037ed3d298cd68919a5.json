{"remainingRequest":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/thread-loader/dist/cjs.js!/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/babel-loader/lib/index.js!/Users/jeffseq/Documents/DashBoard Vue/vue-main/src/data/apexChart.js","dependencies":[{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/src/data/apexChart.js","mtime":1641437118000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/babel.config.js","mtime":1600728574000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeffseq/Documents/DashBoard Vue/vue-main/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}